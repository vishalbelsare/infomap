name: Publish Python Package

on:
  release:
    types: [created]

  workflow_dispatch:

jobs:
  swig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install deps
        run: |
          sudo apt update
          sudo apt install swig
      - name: Run swig
        run: make py-swig
      - uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: swigfiles
          path: build/py/

  build:
    needs: swig
    name: ${{ matrix.config.name }}-python-${{ matrix.python-version }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: windows, os: windows-latest, flags: "-static" }
          - { name: macos, os: macos-latest, flags: "" }
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: swigfiles
          path: build/py
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel autopep8
      - name: Install dependencies on macOS
        if: startsWith(matrix.config.os, 'macos')
        run: brew install libomp
      - name: Build
        shell: bash
        run: CXXFLAGS=${{ matrix.config.flags }} LDFLAGS=${{ matrix.config.flags }} CXX=g++ make py-build
      - name: Test
        shell: bash
        run: |
          pip install networkx pandas flake8
          make py-test
      - name: Dist
        shell: bash
        run: make pypi-dist
      - uses: actions/upload-artifact@v2
        with:
          retention-days: 1
          name: package-${{ matrix.config.name }}-${{ matrix.python-version }}
          path: build/py/

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: package-windows-3.6
          path: windows-3.6
      - uses: actions/download-artifact@v2
        with:
          name: package-windows-3.7
          path: windows-3.7
      - uses: actions/download-artifact@v2
        with:
          name: package-windows-3.8
          path: windows-3.8
      - uses: actions/download-artifact@v2
        with:
          name: package-macos-3.6
          path: macos-3.6
      - uses: actions/download-artifact@v2
        with:
          name: package-macos-3.7
          path: macos-3.7
      - uses: actions/download-artifact@v2
        with:
          name: package-macos-3.8
          path: macos-3.8
      - name: Copy build files
        run: |
          mkdir build
          mv macos-3.8 build/py
          mv macos-3.6/dist/*.whl build/py/dist
          mv macos-3.7/dist/*.whl build/py/dist
          mv windows-3.6/dist/*.whl build/py/dist
          mv windows-3.7/dist/*.whl build/py/dist
          mv windows-3.8/dist/*.whl build/py/dist
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: make pypi-publish
